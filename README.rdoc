=Samus

==Example
  class Location
    
    class Coord
      
      include Samus::Model
      
      desc {"The lat/lng values of a polygon point, which describe the area of a location"}
      
      one :lat, Number do
        desc "The lattitude of the property"
      end
      
      one :lng, Number do
        desc "The longitude of the property"
      end
      
    end
    
    class Polygon
      include Samus::Model
      many :coords, Coord do
        desc "\"coords\" is an object which contains many +Coord+ objects"
      end
    end
    
    include Samus::Model
    
    desc {
      <<-RDOC
Use this to blah blah blah.

===JSON Schema
#{to_json_schema.to_json}
RDOC
    }
    
    one :name, String do
      desc "The name of the hotel"
    end
    
    one :polygon, Polygon do
      desc "An object which contains many coordinates"
    end
    
  end

Now that we have a model:
  
 # class-level
  Location.to_hash
  Location.to_json_schema
  
  # create an instance
  location = Location.new(:name => "Nowhere", :coords => [{:lat => 1.0, :lng =2.0}])
  location.to_hash
  
  # type checking... this raises an error because :coords is not valid
  Location.new(:name => "Blah", :coords => [1])